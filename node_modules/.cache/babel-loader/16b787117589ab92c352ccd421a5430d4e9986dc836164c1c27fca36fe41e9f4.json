{"ast":null,"code":"var _jsxFileName = \"E:\\\\NareshIT JFS\\\\React JS\\\\myquiz\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const ques = [{\n    questiontext: \"What is the capital of India?\",\n    options: [\"New Delhi\", \"Hyderabad\", \"Banglore\", \"Chennai\"]\n  }, {\n    questiontext: \"Who is the PM of India?\",\n    options: [\"Revanth Reddy\", \"Narendra Modi\", \"Amit Shah\", \"Rahul Gandhi\"]\n  }, {\n    questiontext: \"Who is president of India?\",\n    options: [\"Sonia Gandhi\", \"Narendra Modi\", \"Pawan kalyan\", \"Draupadi Murmu\"]\n  }, {\n    questiontext: \"What is the capital of Andhra Pradesh ?\",\n    options: [\"Warangal\", \"Hyderabad\", \"Amrawati\", \"None of the Above\"]\n  }];\n  const [count, setCount] = useState(0);\n  function PreQue() {\n    if (count > 0) {\n      setCount(count - 1);\n    }\n  }\n  function NextQue() {\n    if (count < 3) {\n      setCount(count + 1);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Quiz Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question No: \", count + 1, \" / 4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: ques[count].questiontext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"option\",\n        children: ques[count].options.map(x => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: x\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: [count > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"preq\",\n          onClick: PreQue,\n          children: \"Previous Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: NextQue,\n          disa: true,\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RpyMek13f3iNeQO0Gs9DEYmHKoY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","ques","questiontext","options","count","setCount","PreQue","NextQue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","x","onClick","disa","_c","$RefreshReg$"],"sources":["E:/NareshIT JFS/React JS/myquiz/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\r\n  const ques=[\r\n    {\r\n      questiontext: \"What is the capital of India?\" ,\r\n      options:[\r\n          \"New Delhi\",\r\n          \"Hyderabad\",\r\n          \"Banglore\",\r\n          \"Chennai\"\r\n      ]\r\n    },\r\n    {\r\n      questiontext: \"Who is the PM of India?\" ,\r\n      options:[\r\n        \"Revanth Reddy\",\r\n        \"Narendra Modi\",\r\n        \"Amit Shah\",\r\n        \"Rahul Gandhi\"\r\n      ]\r\n    },\r\n    {\r\n      questiontext: \"Who is president of India?\",\r\n      options:[\r\n        \"Sonia Gandhi\",\r\n        \"Narendra Modi\",\r\n        \"Pawan kalyan\",\r\n        \"Draupadi Murmu\"\r\n      ]\r\n    },\r\n    {\r\n      questiontext: \"What is the capital of Andhra Pradesh ?\" ,\r\n      options:[\r\n        \"Warangal\",\r\n        \"Hyderabad\",\r\n        \"Amrawati\",\r\n        \"None of the Above\"\r\n      ]\r\n    }\r\n  ]\r\n\r\n  const [count,setCount]= useState(0)\r\n\r\n  function PreQue(){\r\n    if(count>0){\r\n    setCount(count-1)\r\n    }\r\n  }\r\n\r\n  function NextQue(){\r\n    if(count<3){\r\n    setCount(count+1)\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>My Quiz Application</h1>\r\n        <div className=\"card\">\r\n            <h2>Question No: {count+1} / 4</h2>\r\n            <h3>{ques[count].questiontext}</h3>\r\n\r\n            <div id=\"option\">\r\n              {ques[count].options.map(x => <li>{x}</li>)}\r\n            </div>\r\n           \r\n              <br>\r\n              </br>\r\n            <div className=\"btn\">\r\n             {count>0 && <button id='preq' onClick={PreQue}>Previous Question</button>}\r\n              <button onClick={NextQue} disa>Next Question</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}